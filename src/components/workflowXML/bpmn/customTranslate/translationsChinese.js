module.exports = {
	  // Labels
	'Append {type}': '{type} 附加',
	'Add Lane above': '添加上泳道',
	'Divide into two Lanes': '分隔到两个泳道',
	'Divide into three Lanes': '分隔到三个泳道',
	'Add Lane below': '添加下泳道',
	'Append compensation activity': '附加修正活动',
	'Change type': 'Typ 改变',
	'Connect using Association': '连接使用协会',
	'Connect using Sequence/MessageFlow or Association': '连接使用片段/信息流或协会',
	'Connect using DataInputAssociation': '连接使用数据输入协会',
	'Remove': '去除',
	'Activate the hand tool': '触发手柄工具',
	'Activate the lasso tool': '触发套索工具',
	'Activate the create/remove space tool': '触发产生/去除空白工具',
	'Create expanded SubProcess': '产生延伸的子进程',
	'Create Pool/Participant': '产生泳池/参与者',
	'Parallel Multi Instance': '并行多实例',
	'Sequential Multi Instance': '连续的多实例',
	'Loop': '弯曲部分',
	'Ad-hoc': '点对点',
	'Create {type}': '{type} 产生',
	'Task': '任务',
	'Send Task': '发送任务',
	'Receive Task': '接受任务',
	'User Task': '用户任务',
	'Manual Task': '手作业',
	'Business Rule Task': '业务规则的任务',
	'Service Task': '服务任务',
	'Script Task': '脚本任务',
	'Call Activity': '呼叫活动',
	'Sub Process (collapsed)': '子过程（崩溃）',
	'Start Event': '启动事件',
	'Intermediate Throw Event': '中间把事件',
	'End Event': '结束事件',
	'Message Start Event': '消息开始事件',
	'Timer Start Event': '定时器启动事件',
	'Conditional Start Event': '有条件的启动事件',
	'Signal Start Event': '信号启动事件',
	'Error Start Event': '错误开始事件',
	'Escalation Start Event': '升级启动事件',
	'Compensation Start Event': '补偿的启动事件',
	'Message Start Event (non-interrupting)': '消息启动事件（不中断）',
	'Timer Start Event (non-interrupting)': '定时启动事件（不中断）',
	'Conditional Start Event (non-interrupting)': '条件启动事件（非中断）',
	'Signal Start Event (non-interrupting)': '信号启动事件（不中断）',
	'Escalation Start Event (non-interrupting)': '升级启动事件（不中断）',
	'Message Intermediate Catch Event': '消息中间捕获事件',
	'Message Intermediate Throw Event': '消息中间抛出事件',
	'Timer Intermediate Catch Event': '定时器中间捕获事件',
	'Escalation Intermediate Throw Event': '升级中间投掷事件',
	'Conditional Intermediate Catch Event': '条件中间捕获事件',
	'Link Intermediate Catch Event': '链路中间捕获事件',
	'Link Intermediate Throw Event': '链路中间抛出事件',
	'Compensation Intermediate Throw Event': '补偿中间投掷事件',
	'Signal Intermediate Catch Event': '信号中间捕获事件',
	'Signal Intermediate Throw Event': '信号中间投掷事件',
	'Message End Event': '消息结束事件',
	'Escalation End Event': '升级结束事件',
	'Error End Event': '错误结束事件',
	'Cancel End Event': '取消结束事件',
	'Compensation End Event': '补偿结束事件',
	'Signal End Event': '信号结束事件',
	'Terminate End Event': '终止结束事件',
	'Message Boundary Event': '消息边界事件',
	'Message Boundary Event (non-interrupting)': '消息边界事件（非中断）',
	'Timer Boundary Event': '定时器边界事件',
	'Timer Boundary Event (non-interrupting)': '定时器边界事件（非中断）',
	'Escalation Boundary Event': '升级边界事件',
	'Escalation Boundary Event (non-interrupting)': '升级边界事件（非中断）',
	'Conditional Boundary Event': '有条件的边界事件',
	'Conditional Boundary Event (non-interrupting)': '有条件的边界事件（非中断）',
	'Error Boundary Event': '错误边界事件',
	'Cancel Boundary Event': '取消边界事件',
	'Signal Boundary Event': '信号边界事件',
	'Signal Boundary Event (non-interrupting)': '信号边界事件（非中断）',
	'Compensation Boundary Event': '补偿边界事件',
	'Exclusive Gateway': '独家门户',
	'Parallel Gateway': '并行网关',
	'Inclusive Gateway': '融合网关',
	'Complex Gateway': '复杂的网关',
	'Event based Gateway': '基于事件的网关',
	'Transaction': '业务',
	'Sub Process': '子流程',
	'Event Sub Process': '事件子流程',
	'Collapsed Pool': '崩溃泳池',
	'Expanded Pool': '扩大池',

	// Errors
	'no parent for {element} in {parent}': 'kein Eltern-Element für {element} in {parent}',
	'no shape type specified': '没有指定形状类型',
	'flow elements must be children of pools/participants': 'Fluss-Elemente müssen Kinder von Pools/Teilnehmern sein',
	'out of bounds release': '外边界释放',
	'more than {count} child lanes': 'mehr als {count} Lane-Kinder',
	'element required': '元素需要',
	'diagram not part of bpmn:Definitions': '图表不属于bpmn：定义',
	'no diagram to display': '无图显示',
	'no process or collaboration to display': '没有进程或协作来显示',
	'element {element} referenced by {referenced}#{property} not yet drawn': 'von {referenced}#{property} referenziertes Element {element} noch nicht gezeichnet',
	'already rendered {element}': '{element} bereits gerendert',
	'failed to import {element}': '{element} konnte nicht importiert werden'
}
